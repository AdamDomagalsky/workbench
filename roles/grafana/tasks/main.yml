---
- name: Create Prometheus volume
  docker_volume:
    name: prometheus
    state: present
  notify: restart prometheus
  tags:
    - prometheus
    - grafana

- name: Create Node Exporter Docker Container
  docker_container:
    name: node-exporter
    image: "prom/node-exporter:{{grafana_stack_version}}"
    pull: yes
    restart_policy: unless-stopped
    networks:
      - name: proxy
    networks_cli_compatible: yes
    state: started
    command:
      --path.procfs=/host/proc
      --path.sysfs=/host/sys
      --collector.filesystem.ignored-mount-points
      "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
  tags:
    - node-exporter
    - prometheus
    - grafana

- name: Create Alert Manager Directory
  file:
    path: "{{project_directory}}/grafana/alertmanager"
    state: directory
  tags:
    - alertmanager
    - prometheus
    - grafana

- name: Alert Manager Configuration Files
  template: 
    src: alertmanager.yml.j2 
    dest: "{{project_directory}}/grafana/alertmanager/config.yml"
  notify: restart alertmanager
  tags:
    - alertmanager
    - prometheus
    - grafana

- name: Create Alert Manager Docker Container
  docker_container:
    name: alertmanager
    image: "prom/alertmanager:{{grafana_stack_version}}"
    pull: yes
    restart_policy: unless-stopped
    networks:
      - name: proxy
    networks_cli_compatible: yes
    state: started
    command:
      --config.file=/etc/alertmanager/config.yml
      --storage.path=/alertmanager
      --cluster.advertise-address=127.0.0.1:9093
      --web.listen-address=localhost:9093
    volumes:
      - "{{project_directory}}/grafana/alertmanager/:/etc/alertmanager/"
  tags:
    - alertmanager
    - prometheus
    - grafana

- name: Create Cadvisor Docker Container
  docker_container:
    name: cadvisor
    image: "google/cadvisor:{{grafana_stack_version}}"
    pull: yes
    restart_policy: unless-stopped
    networks:
      - name: proxy
    networks_cli_compatible: yes
    state: started
    links:
      - redis:redis
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
  tags:
    - cadvisor
    - grafana

- name: Create Prometheus Directory
  file:
    path: "{{project_directory}}/grafana/prometheus"
    state: directory
  tags:
    - prometheus
    - grafana

- name: Prometheus Configuration Files
  template: 
    src: prometheus.yml.j2 
    dest: "{{project_directory}}/grafana/prometheus/prometheus.yml"
  notify: restart prometheus
  tags:
    - prometheus
    - grafana

- name: Create Prometheus Docker Container
  docker_container:
    name: prometheus
    image: "prom/prometheus:{{grafana_stack_version}}"
    pull: yes
    restart_policy: unless-stopped
    networks:
      - name: proxy
    networks_cli_compatible: yes
    state: started
    command:
      --config.file=/etc/prometheus/prometheus.yml
      --storage.tsdb.path=/prometheus
      --web.console.libraries=/usr/share/prometheus/console_libraries
      --web.console.templates=/usr/share/prometheus/consoles
    volumes:
      - "{{project_directory}}/grafana/prometheus/:/etc/prometheus/"
      - prometheus:/prometheus
    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
  tags:
    - prometheus
    - grafana

- import_tasks: roles/postgres/tasks/database_manager.yml
  vars:
    database_name: "{{grafana_database}}"
    database_user: "{{grafana_database_user}}"
    database_password: "{{grafana_database_password}}"
  tags: grafana

- name: Create Grafana Docker Container
  docker_container:
    name: grafana
    image: "grafana/grafana:{{grafana_stack_version}}"
    pull: yes
    restart_policy: unless-stopped
    networks:
      - name: proxy
    networks_cli_compatible: yes
    state: started
    user: "104"
    env:
      GF_SERVER_ROOT_URL: "http://dashboard.{{project_tld}}"
      GF_SECURITY_ADMIN_USER: "{{grafana_user}}"
      GF_SECURITY_ADMIN_PASSWORD: "{{grafana_user_password}}"
      GF_DATABASE_HOST: "database:5432"
      GF_DATABASE_NAME: "{{grafana_database}}"
      GF_DATABASE_TYPE: "postgres"
      GF_DATABASE_PASSWORD: "{{grafana_database_password}}"
      GF_DATABASE_USER: "{{grafana_database_user}}"
      GF_SMTP_ENABLED: "true"
      GF_SMTP_HOST: "{{email_host}}:{{email_port}}"
      GF_SMTP_USER: "{{email_user}}"
      GF_SMTP_PASSWORD: "{{email_password}}"
      GF_SMTP_FROM_ADDRESS: "{{email_user}}"
      GF_INSTALL_PLUGINS: "grafana-piechart-panel"
    labels:
      traefik.http.routers.grafana.entrypoints: "websecure"
      traefik.http.routers.grafana.tls: "true"
      traefik.http.routers.grafana.rule: "Host(`dashboard.{{project_tld}}`)"
      traefik.http.routers.grafana.service: "grafana"
      traefik.http.services.grafana.loadbalancer.server.port: "3000"
      traefik.enable: "true"
  tags: grafana
